<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Nov 02 17:44:28 2017
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_Handler &rArr; usb_handle_standard_request &rArr; usb_configuration_callback &rArr; usb_recv &rArr; udc_recv
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[42]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[26]">AC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">AC1_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[26]">AC1_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[22]">AC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[21]">ADC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[23]">DAC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[10]">DMAC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[e]">EIC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[12]">EVSYS_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[25]">I2S_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[f]">NVMCTRL_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[a]">PM_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[24]">PTC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[d]">RTC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[13]">SERCOM0_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[14]">SERCOM1_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[15]">SERCOM2_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[16]">SERCOM3_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[17]">SERCOM4_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[18]">SERCOM5_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[b]">SYSCTRL_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_samd21.o(i.SystemInit) referenced from startup_samd21_1.o(.text)
 <LI><a href="#[1c]">TC3_Handler</a> from main.o(i.TC3_Handler) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[1d]">TC4_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[1e]">TC5_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[1f]">TC6_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[20]">TC7_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[19]">TCC0_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[1a]">TCC1_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[1b]">TCC2_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[11]">USB_Handler</a> from udc.o(i.USB_Handler) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[c]">WDT_Handler</a> from startup_samd21_1.o(.text) referenced from startup_samd21_1.o(RESET)
 <LI><a href="#[2b]">__main</a> from __main.o(!!!main) referenced from startup_samd21_1.o(.text)
 <LI><a href="#[29]">usb_recv_callback</a> from main.o(i.usb_recv_callback) referenced from main.o(i.usb_configuration_callback)
 <LI><a href="#[29]">usb_recv_callback</a> from main.o(i.usb_recv_callback) referenced from main.o(i.usb_recv_callback)
 <LI><a href="#[2a]">usb_send_callback</a> from main.o(i.usb_send_callback) referenced from main.o(i.usb_recv_callback)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[83]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[85]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[86]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[87]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[88]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[89]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[94]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[95]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[96]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[97]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[98]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[99]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[38]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a1]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[30]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a2]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[34]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; gpio_init &rArr; gpio_configure &rArr; gpio_config_fn_7
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[44]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[39]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>AC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>AC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DAC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMAC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EIC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EVSYS_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>NVMCTRL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SERCOM0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SERCOM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SERCOM2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SERCOM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SERCOM4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SERCOM5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SYSCTRL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TC4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TC5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TC6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TC7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TCC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TCC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TCC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_samd21_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_samd21_1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[77]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_control_send
</UL>

<P><STRONG><a name="[a6]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[3d]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[a7]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_init
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[a9]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[36]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ac]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ad]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ae]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_samd21.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>TC3_Handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(i.TC3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USB_Handler</STRONG> (Thumb, 422 bytes, Stack size 16 bytes, udc.o(i.USB_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USB_Handler &rArr; usb_handle_standard_request &rArr; usb_configuration_callback &rArr; usb_recv &rArr; udc_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_send_callback
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_recv_callback
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_reset_endpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_samd21_1.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>debug_init</STRONG> (Thumb, 178 bytes, Stack size 12 bytes, debug.o(i.debug_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = debug_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>debug_putc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, debug.o(i.debug_putc))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_puts
</UL>

<P><STRONG><a name="[49]"></a>debug_puts</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, debug.o(i.debug_puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = debug_puts
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>gpio_configure</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gpio.o(i.gpio_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_configure &rArr; gpio_config_fn_7
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_7
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_6
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_5
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_4
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_3
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_1
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_0
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[6c]"></a>gpio_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_init &rArr; gpio_configure &rArr; gpio_config_fn_7
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = main &rArr; gpio_init &rArr; gpio_configure &rArr; gpio_config_fn_7
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_puts
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[71]"></a>udc_configure_endpoint</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, udc.o(i.udc_configure_endpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = udc_configure_endpoint &rArr; udc_reset_endpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_reset_endpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[72]"></a>udc_control_send</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, udc.o(i.udc_control_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = udc_control_send &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[79]"></a>udc_control_send_zlp</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, udc.o(i.udc_control_send_zlp))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[78]"></a>udc_control_stall</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udc.o(i.udc_control_stall))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[7e]"></a>udc_endpoint_clear_feature</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, udc.o(i.udc_endpoint_clear_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udc_endpoint_clear_feature
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[7b]"></a>udc_endpoint_configured</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, udc.o(i.udc_endpoint_configured))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[7c]"></a>udc_endpoint_get_status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, udc.o(i.udc_endpoint_get_status))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[7d]"></a>udc_endpoint_set_feature</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, udc.o(i.udc_endpoint_set_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udc_endpoint_set_feature
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[73]"></a>udc_init</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, udc.o(i.udc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = udc_init &rArr; udc_reset_endpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_reset_endpoint
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[7f]"></a>udc_recv</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, udc.o(i.udc_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = udc_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>

<P><STRONG><a name="[47]"></a>udc_recv_callback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb.o(i.udc_recv_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udc_recv_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>

<P><STRONG><a name="[45]"></a>udc_reset_endpoint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, udc.o(i.udc_reset_endpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udc_reset_endpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_configure_endpoint
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>

<P><STRONG><a name="[81]"></a>udc_send</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, udc.o(i.udc_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = udc_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_send
</UL>

<P><STRONG><a name="[48]"></a>udc_send_callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb.o(i.udc_send_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udc_send_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>

<P><STRONG><a name="[7a]"></a>udc_set_address</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, udc.o(i.udc_set_address))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[75]"></a>usb_configuration_callback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.usb_configuration_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usb_configuration_callback &rArr; usb_recv &rArr; udc_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_handle_standard_request
</UL>

<P><STRONG><a name="[46]"></a>usb_handle_standard_request</STRONG> (Thumb, 850 bytes, Stack size 32 bytes, usb.o(i.usb_handle_standard_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = usb_handle_standard_request &rArr; usb_configuration_callback &rArr; usb_recv &rArr; udc_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_set_address
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_endpoint_set_feature
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_endpoint_get_status
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_endpoint_configured
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_endpoint_clear_feature
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_control_stall
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_control_send_zlp
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_control_send
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_configure_endpoint
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_configuration_callback
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>

<P><STRONG><a name="[70]"></a>usb_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb.o(i.usb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usb_init &rArr; udc_init &rArr; udc_reset_endpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>usb_recv</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, usb.o(i.usb_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_recv &rArr; udc_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv_callback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_configuration_callback
</UL>

<P><STRONG><a name="[29]"></a>usb_recv_callback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.usb_recv_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usb_recv_callback &rArr; usb_send &rArr; udc_send
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_send
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.usb_configuration_callback)
<LI> main.o(i.usb_recv_callback)
</UL>
<P><STRONG><a name="[80]"></a>usb_send</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, usb.o(i.usb_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_send &rArr; udc_send
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udc_send
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv_callback
</UL>

<P><STRONG><a name="[2a]"></a>usb_send_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.usb_send_callback))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.usb_recv_callback)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4c]"></a>HAL_GPIO_0_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_0_in))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_0
</UL>

<P><STRONG><a name="[4d]"></a>HAL_GPIO_0_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_0_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_0
</UL>

<P><STRONG><a name="[4e]"></a>HAL_GPIO_0_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_0_write))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_0
</UL>

<P><STRONG><a name="[50]"></a>HAL_GPIO_1_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_1_in))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_1
</UL>

<P><STRONG><a name="[51]"></a>HAL_GPIO_1_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_1_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_1
</UL>

<P><STRONG><a name="[52]"></a>HAL_GPIO_1_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_1_write))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_1
</UL>

<P><STRONG><a name="[54]"></a>HAL_GPIO_2_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_2_in))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_2
</UL>

<P><STRONG><a name="[55]"></a>HAL_GPIO_2_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_2_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_2
</UL>

<P><STRONG><a name="[56]"></a>HAL_GPIO_2_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_2_write))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_2
</UL>

<P><STRONG><a name="[58]"></a>HAL_GPIO_3_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_3_in))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_3
</UL>

<P><STRONG><a name="[59]"></a>HAL_GPIO_3_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_3_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_3
</UL>

<P><STRONG><a name="[5a]"></a>HAL_GPIO_3_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_3_write))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_3
</UL>

<P><STRONG><a name="[5c]"></a>HAL_GPIO_4_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_4_in))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_4
</UL>

<P><STRONG><a name="[5d]"></a>HAL_GPIO_4_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_4_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_4
</UL>

<P><STRONG><a name="[5e]"></a>HAL_GPIO_4_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_4_write))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_4
</UL>

<P><STRONG><a name="[60]"></a>HAL_GPIO_5_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_5_in))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_5
</UL>

<P><STRONG><a name="[61]"></a>HAL_GPIO_5_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_5_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_5
</UL>

<P><STRONG><a name="[62]"></a>HAL_GPIO_5_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_5_write))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_5
</UL>

<P><STRONG><a name="[64]"></a>HAL_GPIO_6_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_6_in))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_6
</UL>

<P><STRONG><a name="[65]"></a>HAL_GPIO_6_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_6_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_6
</UL>

<P><STRONG><a name="[66]"></a>HAL_GPIO_6_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_6_write))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_6
</UL>

<P><STRONG><a name="[68]"></a>HAL_GPIO_7_in</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_7_in))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_7
</UL>

<P><STRONG><a name="[69]"></a>HAL_GPIO_7_pullen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_7_pullen))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_7
</UL>

<P><STRONG><a name="[6a]"></a>HAL_GPIO_7_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.HAL_GPIO_7_write))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config_fn_7
</UL>

<P><STRONG><a name="[4b]"></a>gpio_config_fn_0</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_0
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_0_write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_0_pullen
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_0_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[4f]"></a>gpio_config_fn_1</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_1
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_1_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_1_pullen
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_1_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[53]"></a>gpio_config_fn_2</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_2
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_2_write
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_2_pullen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_2_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[57]"></a>gpio_config_fn_3</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_3
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_3_write
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_3_pullen
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_3_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[5b]"></a>gpio_config_fn_4</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_4
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_4_write
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_4_pullen
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_4_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[5f]"></a>gpio_config_fn_5</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_5
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_5_write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_5_pullen
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_5_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[63]"></a>gpio_config_fn_6</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_6
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_6_write
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_6_pullen
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_6_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[67]"></a>gpio_config_fn_7</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gpio.o(i.gpio_config_fn_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_config_fn_7
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_7_write
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_7_pullen
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_7_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_configure
</UL>

<P><STRONG><a name="[6d]"></a>sys_init</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, main.o(i.sys_init))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>timer_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, main.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
